var documenterSearchIndex = {"docs":
[{"location":"OHP DIY/#DIY","page":"OHP-DIY","title":"DIY","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"This notebooks shows how to custimize the heater/condenser and ohp configuration","category":"page"},{"location":"OHP DIY/#Packages","page":"OHP-DIY","title":"Packages","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"If you need to update the ComputationalHeatTransfer package, I suggest you activate the package's path as your current environment. If you don't need to modify the code within the packge, you don't have to run this block.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"using Pkg\nPkg.activate(dirname(pwd())) # using current environment for development","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Firstly, let's import the necessary packages, you may need to install them for the first time.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"using ComputationalHeatTransfer # our main package\nusing ProgressMeter # to have a progessbar when runing the simulation\nusing Plots # for plotting\ngr()  #ploting backend (the fastest one)","category":"page"},{"location":"OHP DIY/##-Specify-properties","page":"OHP-DIY","title":"# Specify properties","text":"","category":"section"},{"location":"OHP DIY/#Solid-Physical-parameters","page":"OHP-DIY","title":"Solid Physical parameters","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"params is the HeatConductionParameters for the plate material.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"The numbers below represents aluminum.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"ρₛ = 2730; # density\ncₛ  = 8.93e02; # specific heat\nkₛ  = 1.93e02; # heat conductivity\nplate_d = 1.5e-3; # effective d (The thickness of an ideal uniform thickness plate occupying the same volume)\nparams = HeatConductionParameters(ρₛ ,cₛ ,kₛ ,thickness=plate_d)","category":"page"},{"location":"OHP DIY/#Fluid-Physical-parameters","page":"OHP-DIY","title":"Fluid Physical parameters","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"pfluid contains the vapor and liquid properties at a constant reference temperature. Noted that the vapor pressure and the vapor density will be functions of temperatures during the simulation, other properties are extracted from pfluid as an approximate value.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Tref = 291.2 # reference temperature\nfluid_type = \"Butane\"\np_fluid = SaturationFluidProperty(fluid_type,Tref)","category":"page"},{"location":"OHP DIY/#Set-the-geometries","page":"OHP-DIY","title":"Set the geometries","text":"","category":"section"},{"location":"OHP DIY/#Geometry-parameters","page":"OHP-DIY","title":"Geometry parameters","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"The 2D domain is of rectangular shape (slightly different from ASETS-II). In the future it can be of arbitrary shape using the immersedlayers.jl package.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Lx = 0.1524; # plate size x [m]\nLy = 0.0648; # plate size y [m]\nxlim = (-Lx/2,Lx/2) # plate x limits\nylim = (-Ly/2,Ly/2) # plate y limits","category":"page"},{"location":"OHP DIY/#Set-mesh-size-and-maximum-time-step-for-plate-heat-conduction","page":"OHP-DIY","title":"Set mesh size and maximum time step for plate heat conduction","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Δx is controlled by Δx = α*gridPe and set having the same order of magitute of tube diameter 1e-3. Fourier number is used to give a safety \"cap\" of time step you can choose in the fluid module","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Δx,Δt_max = setstepsizes(params.α,gridPe=8.0,fourier=0.3)","category":"page"},{"location":"OHP DIY/#Set-up-the-evaporators-and-condensers","page":"OHP-DIY","title":"Set up the evaporators and condensers","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Right now, the OHPtype looks up a preset dictionary of OHP evaporators and condensers.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"You can also customize them in the OHP DIY notebook.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Firstly let's give the total heater power","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"power = 10 # total heater power in watts","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Then let's construct a heater","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Lheater_x = Lx*0.1\nLheater_y = Ly*0.9\n\nqe = power/Lheater_x/Lheater_y\n\neb1 = Rectangle(Lheater_x/2,Lheater_x/2,1.5*Δx)\nTfe = RigidTransform((0.0,-0.0),0.0)\nTfe(eb1)\n\neparams = [PrescribedHeatFluxRegion(qe,eb1)];","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Then let's consctruct a condenser","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"Lcondenser_x = Lx*0.2\nLcondenser_y = Ly*0.9\n\nhc = 2000.0\nqe = power/Lheater_x/Lheater_y\n\ncb1 = Rectangle(Lheater_y/2,Lheater_y/2,1.5*Δx)\nTfc = RigidTransform((Lx*0.3,-0.0),0.0)\nTfc(cb1)\n\nTc = Tref\ncparams = [PrescribedHeatModelRegion(hc,Tc,cb1)];","category":"page"},{"location":"OHP DIY/#Set-up-OHP-channel's-shape","page":"OHP-DIY","title":"Set up OHP channel's shape","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"in this example we construct a user-defined curve","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"a = 0.03\nθ = 0:2π/1000:2π\n# r = a*(1 .- sin.(θ))\nr = a*sin.(4θ)\nx = r .* cos.(θ)\ny = r .* sin.(θ);","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"# x, y = construct_ohp_curve(\"ASETS\",Δx) # get x and y coordinates for the channel\nohp = BasicBody(x,y) # build a BasicBody based on x,y","category":"page"},{"location":"OHP DIY/#Plot-what-you-got-so-far","page":"OHP-DIY","title":"Plot what you got so far","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"This is a exmaple of the compuational domain (the box) and the OHP channel serpentine (in blue)","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"# plot ohp\nplt = plot(ohp,fillalpha=0,linecolor=:black,xlims=xlim,ylims=ylim,framestyle = :box)\n\n# plot heaters (red)\nfor ep in eparams\n    plot!(ep)\nend\n\n# plot condensers (blue)\nfor cp in cparams\n    plot!(cp)\nend\n\n# show plot\nplt","category":"page"},{"location":"OHP DIY/#Construct-the-systems","page":"OHP-DIY","title":"Construct the systems","text":"","category":"section"},{"location":"OHP DIY/#Create-HeatConduction-system","page":"OHP-DIY","title":"Create HeatConduction system","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"The solid module dealing with the 2D conduction, evaporator, condenser, and the OHP line heat source is constructed here.","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"ohpgeom = ComputationalHeatTransfer.LineSourceParams(ohp) # build a line heat source based on BasicBody\nsys_plate = HeatConduction(params,Δx,xlim,ylim,Δt_max,qline=ohpgeom,qflux=eparams,qmodel=cparams)","category":"page"},{"location":"OHP DIY/#Create-OHP-inner-channel-system","page":"OHP-DIY","title":"Create OHP inner channel system","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"sys_tube: fluid module system","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"sys_tube = initialize_ohpsys(fluid_type,sys_plate,p_fluid,Tref,power)","category":"page"},{"location":"OHP DIY/#Initialize","page":"OHP-DIY","title":"Initialize","text":"","category":"section"},{"location":"OHP DIY/#set-time-step","page":"OHP-DIY","title":"set time step","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"tspan = (0.0, 2.0); # start time and end time\ndt_record = 0.01   # saving time interval\n\ntstep = 1e-3    # actrual time marching step","category":"page"},{"location":"OHP DIY/#combine-inner-tube-and-plate-together","page":"OHP-DIY","title":"combine inner tube and plate together","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"u_plate = newstate(sys_plate) .+ Tref # initialize plate T field to uniform Tref\nintegrator_plate = init(u_plate,tspan,sys_plate) # construct integrator_plate\n\nu_tube = newstate(sys_tube) # initialize OHP tube \nintegrator_tube = init(u_tube,tspan,sys_tube); # construct integrator_tube","category":"page"},{"location":"OHP DIY/#initialize-arrays-for-saving","page":"OHP-DIY","title":"initialize arrays for saving","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"sr = SimulationResult(integrator_tube,integrator_plate);","category":"page"},{"location":"OHP DIY/#Solve","page":"OHP-DIY","title":"Solve","text":"","category":"section"},{"location":"OHP DIY/#Run-the-simulation-and-store-data","page":"OHP-DIY","title":"Run the simulation and store data","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"@showprogress for t in tspan[1]:tstep:tspan[2]\n\n    timemarching!(integrator_tube,integrator_plate,tstep)\n\n    if (mod(integrator_plate.t,dt_record) < 1e-6) || (mod(-integrator_plate.t,dt_record) < 1e-6)\n        store!(sr,integrator_tube,integrator_plate)\n    end\n\nend","category":"page"},{"location":"OHP DIY/#Store-data","page":"OHP-DIY","title":"Store data","text":"","category":"section"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"save_path = dirname(dirname(dirname(pwd())))*\"/OHPnume/OHP2_40W_large.jld2\"\nsave(save_path,\"SimulationResult\",sr)","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"","category":"page"},{"location":"OHP DIY/","page":"OHP-DIY","title":"OHP-DIY","text":"This notebook was generated using Literate.jl.","category":"page"},{"location":"OHP simulation/#ASETS-II-cases-simulation","page":"Simulation","title":"ASETS-II cases simulation","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"This is an example of a simulation package for conjugate heat transfer of an oscillating heat pipe. SI units are used and units are emitted","category":"page"},{"location":"OHP simulation/#What-do-we-need-to-solve-an-OHP-problem?","page":"Simulation","title":"What do we need to solve an OHP problem?","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"specify properties : Solid property, Fluid property","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"set the geometries : Computational domain, Heaters/Condensers, OHP shapes","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"construct the systems : Fluid system(1D), HeatConduction system(2D)","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"initialize : initialize the integrators and the data structs for saving","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"solve","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"save/examine","category":"page"},{"location":"OHP simulation/#Packages","page":"Simulation","title":"Packages","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"Firstly, let's import the necessary packages, you may need to install them for the first time.","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"using ComputationalHeatTransfer # our main package\nusing ProgressMeter # to have a progessbar when runing the simulation\nusing Plots # for plotting\ngr()  #ploting backend (the fastest one)","category":"page"},{"location":"OHP simulation/#Specify-properties","page":"Simulation","title":"Specify properties","text":"","category":"section"},{"location":"OHP simulation/#Solid-Physical-parameters","page":"Simulation","title":"Solid Physical parameters","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"params is the HeatConductionParameters for the plate material. The numbers below represents aluminum.","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"ρₛ = 2730; # density\ncₛ  = 8.93e02; # specific heat\nkₛ  = 1.93e02; # heat conductivity\nplate_d = 1.5e-3; # effective d (The thickness of an ideal uniform thickness plate occupying the same volume)\nparams = HeatConductionParameters(ρₛ ,cₛ ,kₛ ,thickness=plate_d)","category":"page"},{"location":"OHP simulation/#Fluid-Physical-parameters","page":"Simulation","title":"Fluid Physical parameters","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"pfluid contains the vapor and liquid properties at a constant reference temperature. Noted that the vapor pressure and the vapor density will be functions of temperatures during the simulation, other properties are extracted from pfluid as an approximate value.","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"Tref = 291.2 # reference temperature\nfluid_type = \"Butane\"\np_fluid = SaturationFluidProperty(fluid_type,Tref)","category":"page"},{"location":"OHP simulation/#Set-the-geometries","page":"Simulation","title":"Set the geometries","text":"","category":"section"},{"location":"OHP simulation/#Geometry-parameters","page":"Simulation","title":"Geometry parameters","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"The 2D domain is of rectangular shape (slightly different from ASETS-II). In the future it can be of arbitrary shape using the immersedlayers.jl package.","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"Lx = 0.1524; # plate size x [m]\nLy = 0.0648; # plate size y [m]\nxlim = (-Lx/2,Lx/2) # plate x limits\nylim = (-Ly/2,Ly/2) # plate y limits","category":"page"},{"location":"OHP simulation/#Set-mesh-size-and-maximum-time-step-for-plate-heat-conduction","page":"Simulation","title":"Set mesh size and maximum time step for plate heat conduction","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"Δx is controlled by Δx = α*gridPe and set having the same order of magitute of tube diameter 1e-3. Fourier number is used to give a safety \"cap\" of time step you can choose in the fluid module","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"Δx,Δt_max = setstepsizes(params.α,gridPe=8.0,fourier=0.3)","category":"page"},{"location":"OHP simulation/#Set-up-the-evaporators-and-condensers","page":"Simulation","title":"Set up the evaporators and condensers","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"Right now, the OHPtype looks up a preset dictionary of OHP evaporators and condensers.","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"You can also customize them in the OHP DIY notebook","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"OHPtype = \"ASETS-II OHP 2 LARGE HEATER\"\npower = 40 # total heater power in watts\nTc = Tref; # condenser temperature\neparams,cparams = OHPConfiguration(OHPtype,power,Tc,Δx);","category":"page"},{"location":"OHP simulation/#Set-up-OHP-channel's-shape","page":"Simulation","title":"Set up OHP channel's shape","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"constructohpcurve is a built-in function that generates two arrays: x that contains all x values of the discrete points, and y contains all y values. x and y have the same length. ","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"You can also customize this function to generate an OHP shape of your choice as long as they produce x array and y array.","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"x, y = construct_ohp_curve(\"ASETS\",Δx) # get x and y coordinates for the channel\nohp = BasicBody(x,y) # build a BasicBody based on x,y\n\nohpgeom = ComputationalHeatTransfer.LineSourceParams(ohp) # build a line heat source based on BasicBody","category":"page"},{"location":"OHP simulation/#Plot-what-you-got-so-far","page":"Simulation","title":"Plot what you got so far","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"This is a exmaple of the compuational domain (the box) and the OHP channel serpentine (in blue)","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"# plot ohp\nplt = plot(ohp,fillalpha=0,linecolor=:black,xlims=xlim,ylims=ylim,framestyle = :box,xlabel=\"x [m]\",ylabel=\"y [m]\")\n\n# plot heaters (red)\nfor ep in eparams\n    plot!(ep)\nend\n\n# plot condensers (blue)\nfor cp in cparams\n    plot!(cp)\nend\n\n# show plot\nplt","category":"page"},{"location":"OHP simulation/#Construct-the-systems","page":"Simulation","title":"Construct the systems","text":"","category":"section"},{"location":"OHP simulation/#Create-HeatConduction-system","page":"Simulation","title":"Create HeatConduction system","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"The solid module dealing with the 2D conduction, evaporator, condenser, and the OHP line heat source is constructed here.","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"sys_plate = HeatConduction(params,Δx,xlim,ylim,Δt_max,qline=ohpgeom,qflux=eparams,qmodel=cparams)","category":"page"},{"location":"OHP simulation/#Create-OHP-inner-channel-system","page":"Simulation","title":"Create OHP inner channel system","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"sys_tube: fluid module system","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"sys_tube = initialize_ohpsys(OHPtype,fluid_type,sys_plate,p_fluid,Tref,power)","category":"page"},{"location":"OHP simulation/#Initialize","page":"Simulation","title":"Initialize","text":"","category":"section"},{"location":"OHP simulation/#set-time-step","page":"Simulation","title":"set time step","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"tspan = (0.0, 2.0); # start time and end time\ndt_record = 0.01   # saving time interval\n\ntstep = 1e-3     # actrual time marching step","category":"page"},{"location":"OHP simulation/#combine-inner-tube-and-plate-together","page":"Simulation","title":"combine inner tube and plate together","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"u_plate = newstate(sys_plate) .+ Tref # initialize plate T field to uniform Tref\nintegrator_plate = init(u_plate,tspan,sys_plate) # construct integrator_plate\n\nu_tube = newstate(sys_tube) # initialize OHP tube \nintegrator_tube = init(u_tube,tspan,sys_tube); # construct integrator_tube","category":"page"},{"location":"OHP simulation/#initialize-arrays-for-saving","page":"Simulation","title":"initialize arrays for saving","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"sr = SimulationResult(integrator_tube,integrator_plate);","category":"page"},{"location":"OHP simulation/#Solve","page":"Simulation","title":"Solve","text":"","category":"section"},{"location":"OHP simulation/#Run-the-simulation-and-store-data","page":"Simulation","title":"Run the simulation and store data","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"@showprogress for t in tspan[1]:tstep:tspan[2]\n\n    timemarching!(integrator_tube,integrator_plate,tstep)\n\n    if (mod(integrator_plate.t,dt_record) < 1e-6) || (mod(-integrator_plate.t,dt_record) < 1e-6)\n        store!(sr,integrator_tube,integrator_plate)\n    end\n\nend","category":"page"},{"location":"OHP simulation/#Store-data","page":"Simulation","title":"Store data","text":"","category":"section"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"save_path = dirname(dirname(dirname(pwd())))*\"/OHPnume/OHP2_40W_large.jld2\"\nsave(save_path,\"SimulationResult\",sr)","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"","category":"page"},{"location":"OHP simulation/","page":"Simulation","title":"Simulation","text":"This notebook was generated using Literate.jl.","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"using Interact\nusing UnPack","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"using ComputationalHeatTransfer\nusing Plots\ngr()  ","category":"page"},{"location":"PostProcessing-oneresult/#Read-simulation-data","page":"Post-Processing","title":"Read simulation data","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"read_path = dirname(dirname(dirname(pwd())))*\"/OHPnume/OHP2_40W_large.jld2\"\nSimuResult = load(read_path)[\"SimulationResult\"];","category":"page"},{"location":"PostProcessing-oneresult/#get-time-array","page":"Post-Processing","title":"get time array","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"t = SimuResult.tube_hist_t;","category":"page"},{"location":"PostProcessing-oneresult/#Plot-2D-graphs","page":"Post-Processing","title":"Plot 2D graphs","text":"","category":"section"},{"location":"PostProcessing-oneresult/#film-and-slug-dynamics","page":"Post-Processing","title":"film and slug dynamics","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"@gif for i in eachindex(t)\n    plot(OHPSlug(),i,SimuResult)\nend","category":"page"},{"location":"PostProcessing-oneresult/#plate-T-[K]","page":"Post-Processing","title":"plate T [K]","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"@gif for i in eachindex(t)\n    plot(OHPTemp(),i,SimuResult,clim=(291.2,294.0))\nend","category":"page"},{"location":"PostProcessing-oneresult/#D-superheat","page":"Post-Processing","title":"2D superheat","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"@gif for i in eachindex(t)\n# @gif for i =1:10\n    plot(OHPSuper(),i,SimuResult)\nend","category":"page"},{"location":"PostProcessing-oneresult/#D-pressure","page":"Post-Processing","title":"2D pressure","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"@gif for i in eachindex(t)\n    plot(OHPPres(),i,SimuResult)\nend","category":"page"},{"location":"PostProcessing-oneresult/#Plot-2D-interpolated-curves","page":"Post-Processing","title":"Plot 2D interpolated curves","text":"","category":"section"},{"location":"PostProcessing-oneresult/#Interpolate-2D-T-data-from-the-plate-for-fixed-sensors-on-the-plate","page":"Post-Processing","title":"Interpolate 2D T data from the plate for fixed sensors on the plate","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"place the 2D sensors","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"x2Dsensors = [-2.75,-1.4,-0.8,0.0,0.0,0.8,1.4,2.75] .* inches\ny2Dsensors = [0.0,   0.0, 0.0,0.0,0.4,0.0,0.0,0.0] .* inches\nplate_sensors = (x2Dsensors,y2Dsensors);","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"get the curve","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"t_hist,g_hist = getTcurve(plate_sensors,SimuResult);","category":"page"},{"location":"PostProcessing-oneresult/#Read-experiment-T-data","page":"Post-Processing","title":"Read experiment T data","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"import XLSX","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"read experiment file (customizable)","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"# customize \nexpfile = expfileDict[\"O002_H001_P040\"]\nexppath = dirname(dirname(dirname(pwd())))*\"/OHPexp/\"\nxf = XLSX.readxlsx(exppath*expfile);","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"get experiment data","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"Onum, Hnum, power_exp = getconfig(expfile)\nRTDt,RTD = getRTD(xf,Onum);","category":"page"},{"location":"PostProcessing-oneresult/#D-interpolated-temperature-curve-at-fixed-sensors","page":"Post-Processing","title":"2D interpolated temperature curve at fixed sensors","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"RTD_for_plotting = [1,4,8];","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"# plot OHP\nplot(OHP(),SimuResult)\n\n# plot sensors\nscatter!(x2Dsensors[RTD_for_plotting],y2Dsensors[RTD_for_plotting])\nannotate!(x2Dsensors[RTD_for_plotting], y2Dsensors[RTD_for_plotting].-0.005, RTD_for_plotting)","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"plot(OHPTcurve(),RTD_for_plotting,(t_hist,g_hist),SimuResult)\nplot!(OHPTexp() ,RTD_for_plotting,(RTDt,RTD)     ,SimuResult)","category":"page"},{"location":"PostProcessing-oneresult/#D-interpolated-thermal-conductance","page":"Post-Processing","title":"2D interpolated thermal conductance","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"ihot = 4 # hot sensor  for calculating thermal conductance\nicold = 8 # cold sensor  for calculating thermal conductance;","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"# plot them separately\nplot(OHPCond(),(ihot,icold),(t_hist,g_hist),(RTDt,RTD),SimuResult)","category":"page"},{"location":"PostProcessing-oneresult/#Liquid-slug-velocity-statistics","page":"Post-Processing","title":"Liquid slug velocity statistics","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"# fix title and ylabel and legend\nplot(OHPV(), SimuResult::SimulationResult,ylimit=(-2,2))  ","category":"page"},{"location":"PostProcessing-oneresult/#Plot-1D-interpolated-curves","page":"Post-Processing","title":"Plot 1D interpolated curves","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"# tell the time\n@manipulate for i in 1:1:length(t)\n    plot(OHP1DT(),i,SimuResult,xlim=(1,2))\n#     plot!(twinx(),OHPTwall(),i,SimuResult,xlim=(1,2))\n    plot!(twinx(),OHP1DΔT(),i,SimuResult,xlim=(1,2))\n#     plot!(twinx(),OHP1DP(),i,SimuResult,xlim=(1,2))\nend","category":"page"},{"location":"PostProcessing-oneresult/#D-sensor-selector","page":"Post-Processing","title":"1D sensor selector","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"L = SimuResult.integrator_tube.p.tube.L\n@manipulate for ξ in 0:1e-3:L\n    plot(OHP(),SimuResult) # plot the ohp layout\n\n    xprobe,yprobe = oneDtwoDtransform(ξ,SimuResult)\n    scatter!([xprobe],[yprobe])\nend","category":"page"},{"location":"PostProcessing-oneresult/#Plot-1D-property-curve-for-a-fixed-location-sensor","page":"Post-Processing","title":"Plot 1D property curve for a fixed location sensor","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"xsensors1D = [2.097, 3.0, 4,4.1]","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"θhist1D,phist1D = get1DTandP(xsensors1D, SimuResult);","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"plot(t,θhist1D,label=string.(\"ξ=\", xsensors1D'),xlabel=\"time [s]\", ylabel=\"temperature [K]\")","category":"page"},{"location":"PostProcessing-oneresult/#get-boiling-data","page":"Post-Processing","title":"get boiling data","text":"","category":"section"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"boil_data,boil_num_x,boil_num_t,t_boil,x2D_boil,y2D_boil,boil_dt = get_boil_matrix(SimuResult::SimulationResult);","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"plot(OHP(),SimuResult)\nscatter!(x2D_boil,y2D_boil,\n    colorbar=true,markeralpha=delta.(boil_num_x),colorbar_title=\"\\n boiling frequency [Hz]\",right_margin=3Plots.mm,marker_z=boil_num_x./SimuResult.tube_hist_t[end],markerstrokewidth=0,markercolor=cgrad(:greys, rev = true))","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"plot(t_boil,boil_num_t./boil_dt,\ncolor=:orange, legend=:topleft, ylabel=\"f [HZ]\",xlabel=\"time [s]\", label=\"overall boiling frequency\")","category":"page"},{"location":"PostProcessing-oneresult/","page":"Post-Processing","title":"Post-Processing","text":"","category":"page"},{"location":"#installation","page":"Home","title":"installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install the package:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add https://github.com/liyuxuan48/ComputationalHeatTransfer.jl.git","category":"page"},{"location":"","page":"Home","title":"Home","text":"in julia","category":"page"},{"location":"","page":"Home","title":"Home","text":"using ComputationalHeatTransfer","category":"page"}]
}
